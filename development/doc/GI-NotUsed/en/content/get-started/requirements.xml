<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<!-- $Id: requirements.xml,v 1.1 2011/08/15 17:46:08 cr Exp $ -->

<section id="development-environment">
    <title>Requirements</title>
    <para>
To facilitate the writing of OTRS GI pluggins, the creation of a development environment is necessary.
    </para>
    <section id="prerequisites">
        <title>OTRS version</title>
        <para>
First of all we should have installed an OTRS enviroment, in order to use it as a base for developing GI stuff.
Notice that Generic Interface only can be used with OTRS 3.0 version or up.
We can get an OTRS copy following next steps.
        </para>
        <para>
        <screen>
shell> cvs -d :pserver:anonymous@source.otrs.org:/home/cvs login
# for CVS Head
shell> cvs -z3 -d :pserver:anonymous@source.otrs.org:/home/cvs co otrs
# for a specific branch (just remember you need at least OTRS 3.0 version to work with GI)
shell> cvs -z3 -d :pserver:anonymous@source.otrs.org:/home/cvs co -r rel-3_0 otrs
        </screen>
        </para>
        <para>
OTRS Generic Interface module can be checked out following the same routine.
Check out the "module-tools" module, too for your development environment. It contains a number of useful tools.
        </para>
        <para>
To enable the CVS-OTRS installation it is necessary to configure it on the Apache web server
(we could use "scripts/apache2-httpd.include.conf" file as an example, if you are using mod_perl,
please be sure to enable option for Generic Interface) and to create the Config.pm.
Then the Installer.pl can be executed. The basic system is ready to run now.
        </para>
<para>
The GI must be usable by administrators (to configure local/remote web services), who have good knowledge
about the basic networking and programming concepts involved:
        <itemizedlist mark="round">
            <listitem>
                <para>HTTP</para>
            </listitem>
            <listitem>
                <para>Web services</para>
            </listitem>
            <listitem>
                <para>SOAP, ...</para>
            </listitem>
            <listitem>
                <para>XML</para>
            </listitem>
            <listitem>
                <para>Data mappings</para>
            </listitem>
            <listitem>
                <para>The third party application or service they want to use</para>
            </listitem>
        </itemizedlist>
</para>
    </section>
    <section id="environment-link-modules">
        <title>Linking Generic Interface Module</title>
        <para>
A clear separation between OTRS and the modules is necessary for proper developing.
Particularly when using a CVS, a clear separation is crucial.
In order to facilitate the OTRS access to the files, links must be created.
This is done by a script in the directory module tools (to get this tools, check out the CVS module "module-tools").
Example: Linking the Generic Interface Module:
        </para>
        <para>
        <screen>
shell> ~/src/module-tools/link.pl ~/src/GI/ ~/src/otrs/
        </screen>
        </para>
        <para>
Whenever new files are added, they must be linked as described above.
        </para>
        <para>
To remove links from OTRS enter the following command:
        </para>
        <para>
        <screen>
shell> ~/src/module-tools/remove_links.pl ~/src/otrs/
        </screen>
        </para>
    </section>
    <section id="environment-after-link">
        <title>Necessary Actions after Linking</title>
        <para>
As soon as the linking is completed, the Sysconfig must be run to register the module in OTRS.
Example:
        </para>
        <para>
        <screen>
shell> cat GI.sopm | bin/otrs.RebuildConfig.pl -t mysql
        </screen>
        </para>
        <para>
Or just get into the SysConfig in Admin area on Grafic Interface
        </para>
        <para>
Required users, groups and roles must be created manually and access authorizations must be defined.
Additional databank tables for Generic Interface must be created manually using next command.
From the Generic Interface OPM package, the SQL commands can be read out to create the tables.
Example:
        </para>
        <para>
        <screen>
shell> cat GI.sopm | bin/otrs.xml2sql.pl -t mysql
        </screen>
        </para>
    </section>
</section>