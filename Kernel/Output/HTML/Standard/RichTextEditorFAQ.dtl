# --
# RichTextEditorFAQ.dtl - provides Rich Text Editor
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# --
# $Id: RichTextEditorFAQ.dtl,v 1.6 2010/05/26 12:57:15 ub Exp $
# $OldId: RichTextEditor.dtl,v 1.20.2.11 2010/05/26 12:46:31 ub Exp $
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (AGPL). If you
# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
# --

# load js
<script src="$Config{"Frontend::JavaScriptPath"}fckeditor-2.6.4.1/fckeditor.js"></script>

<script type="text/javascript">
// update body with current rich text content
function RichTextUpdateLinkedField() {
    FCKeditorAPI.GetInstance('RichText').UpdateLinkedField();
}

// set focus to rich text editor
function RichTextFocus() {
    FCKeditorAPI.GetInstance('RichText').Focus();
}

// cleanup real body
// If the body only contains whitespace or html tags but no text,
// reset it to ''. This is needed for the frontend and backend
// content checks to work properly.
function RichTextCleanup() {
# ---
# FAQ
# ---
#    var Elem = document.getElementById('RichText');
    for ( var i = 1; i <= 6; i++ ) {
        var Elem = document.getElementById('Field' + i);
# ---
    if (Elem) {
        var StrippedContent = Elem.value.replace(/\s+|&nbsp;|<\/?\w+\s?\/?>/g, '');
        if (StrippedContent.length == 0) {
            Elem.value = '';
        }
    }
# ---
# FAQ
# ---
    }
# ---
}

# ---
# FAQ
# ---
#function InitRichText() {
#    var oFCKeditor = new FCKeditor( 'RichText' );
function InitRichTextFAQ( Fieldname ) {
    var oFCKeditor = new FCKeditor( Fieldname );
# ---
# ---
# FAQ
# ---
#    oFCKeditor.Height                             = '$Config{"Frontend::RichTextHeight"}' || 320;
#    oFCKeditor.Width                              = '$Config{"Frontend::RichTextWidth"}' || 620;
    oFCKeditor.Height                             = 400;
    oFCKeditor.Width                              = 850;
# ---
    oFCKeditor.BasePath                           = '$Config{"Frontend::JavaScriptPath"}/fckeditor-2.6.4.1/';
    oFCKeditor.Config["ForcePasteAsPlainText"]    = false;
    oFCKeditor.Config["EditorAreaStyles"]         = 'body { $Config{"Frontend::RichText::DefaultCSS"} }';
    oFCKeditor.Config["AutoDetectLanguage"]       = false;
    // Fix for bug#5383 - language strings such as pt_BR should be reformatted as pt-br:
    oFCKeditor.Config["DefaultLanguage"]          = String('$Env{"UserLanguage"}').toLowerCase().replace("_", "-");
    oFCKeditor.Config["ImageUploadURL"]           = '$Env{"Baselink"}';
    oFCKeditor.Config["FirefoxSpellChecker"]      = true;
    oFCKeditor.Config["BrowserContextMenu"]       = true;
    oFCKeditor.Config["SpellChecker"]             = 'SpellerPages';
    oFCKeditor.Config["SpellerPagesServerScript"] = '$Env{"Baselink"}';
    oFCKeditor.Config["FontSizes"]                = '8px;10px;12px;16px;18px;20px;22px;24px;26px;28px;30px;';
    oFCKeditor.Config["EnterMode"]                = 'br';
    oFCKeditor.Config["ShiftEnterMode"]           = 'br';
    oFCKeditor.Config["LinkUpload"]               = false;

    if ( '$Env{"TextDirection"}' ) {
        oFCKeditor.Config["ContentLangDirection"] = '$Env{"TextDirection"}';
    }

    var ToolbarSet = '';
    if ( document.compose && document.compose.FormID ) {
# ---
# FAQ
# ---
#        oFCKeditor.Config["Action"] = 'PictureUpload';
        oFCKeditor.Config["Action"] = "PictureUploadFAQ";
# ---
        oFCKeditor.Config["FormID"] = document.compose.FormID.value;
        ToolbarSet = 'Full';
        if ( '$Env{"BrowserSpellCheckerInline"}' ) {
            ToolbarSet = 'FullSpell';
        }
    }
    else {
        ToolbarSet = 'Simple';
        if ( '$Env{"BrowserSpellCheckerInline"}' ) {
            ToolbarSet = 'SimpleSpell';
        }
    }
    oFCKeditor.ToolbarSet = ToolbarSet;

    oFCKeditor.ReplaceTextarea();
}

// preserve old window onload event
var OldOnLoad = window.onload;
window.onload = function() {
    if (typeof OldOnLoad == 'function') {
        OldOnLoad();
    }
# ---
# FAQ
# ---
#    InitRichText();
    for ( var i = 1; i <= 6; i++ ) {
        if ( document.getElementById('Field' + i) ) {
            var myEditor = InitRichTextFAQ('Field' + i);
        }
    }
# ---
}

function FCKeditor_OnComplete( editorInstance ) {
    // workaround for http://dev.fckeditor.net/ticket/3053
    // see also http://www.fckeditor.net/forums/viewtopic.php?f=6&t=13222
    var fck_iframe = document.getElementById('RichText___Frame');
    if ( fck_iframe && fck_iframe.contentDocument ) {
        var fck_editing_area = fck_iframe.contentDocument.getElementById('xEditingArea');
        fck_editing_area.style.height = '100.1%';
        setTimeout( function() {
            fck_editing_area.style.height = '100%'
        }, 100 );
    }

    // cleanup hidden body field after update with content of rich text
    editorInstance.Events.AttachEvent( 'OnAfterLinkedFieldUpdate', RichTextCleanup );
}
</script>
